{"ast":null,"code":"import _toConsumableArray from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tamara/Desktop/react-chatkit-notifications/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tamara/Desktop/react-chatkit-notifications/client/src/App.tsx\";\nimport Chatkit from '@pusher/chatkit-client';\nimport * as React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport './normalize.css';\nimport './skeleton.css';\nimport Chat from './components/Chat';\nimport EventList from './components/Chat';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      userInput: '',\n      messages: [],\n      currentUser: null,\n      users: [],\n      currentRoom: [],\n      joinableRooms: [],\n      roomId: '',\n      currentRoomName: '',\n      newRoomName: '',\n      invitedPerson: '',\n      events: []\n    };\n\n    _this.fetchEvents = function () {\n      _this.setState(_objectSpread({}, _this.state));\n\n      axios.get('http://localhost:5200/api/eventlog').then(function (response) {\n        console.log('Data fetched', response);\n\n        _this.setState({\n          events: response.data\n        });\n\n        console.log(_this.state.events);\n      });\n    };\n\n    _this.updateInput = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.grantNotificationPermission = function () {\n      if (!('Notification' in window)) {\n        alert('This browser does not support system notifications');\n        return;\n      }\n\n      if (Notification.permission === 'granted') {\n        new Notification('You are already subscribed to web notifications');\n        return;\n      }\n\n      if (Notification.permission !== 'denied') {\n        Notification.requestPermission().then(function (result) {\n          if (result === 'granted') {\n            new Notification('Awesome! You will start receiving notifications shortly');\n          }\n        });\n      }\n    };\n\n    _this.sendMessage = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          userInput = _this$state.userInput,\n          currentUser = _this$state.currentUser,\n          roomId = _this$state.roomId;\n      var messageObj = {\n        text: userInput,\n        roomId: roomId\n      };\n      currentUser.sendMessage(messageObj);\n\n      _this.setState({\n        userInput: ''\n      });\n    };\n\n    _this.showNotification = function (message) {\n      var username = _this.state.username;\n\n      if (message.senderId !== username) {\n        var title = message.text;\n        var body = message.senderId;\n        new Notification(title, {\n          body: body\n        });\n      }\n    };\n\n    _this.addUserToRoom = function (event) {\n      event.preventDefault();\n      var _this$state2 = _this.state,\n          username = _this$state2.username,\n          newRoomName = _this$state2.newRoomName,\n          roomId = _this$state2.roomId,\n          invitedPerson = _this$state2.invitedPerson;\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\n        userId: username,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: 'http://localhost:5200/authenticate'\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.addUserToRoom({\n          userId: invitedPerson,\n          roomId: roomId\n        }).then(function (room) {\n          console.log(\"Created room called \".concat(room.name));\n        }).catch(function (err) {\n          console.log(\"Error creating room \".concat(err));\n        });\n      });\n    };\n\n    _this.addUser = function (event) {\n      event.preventDefault();\n      var username = _this.state.username;\n      axios.post('http://localhost:5200/users', {\n        username: username\n      }).then(function () {\n        var tokenProvider = new Chatkit.TokenProvider({\n          url: 'http://localhost:5200/authenticate'\n        });\n        var chatManager = new Chatkit.ChatManager({\n          instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\n          userId: username,\n          tokenProvider: tokenProvider\n        });\n        return chatManager.connect().then(function (currentUser) {\n          _this.setState({\n            currentUser: currentUser,\n            users: currentUser.users,\n            joinableRooms: currentUser.rooms\n          }, function () {\n            return _this.grantNotificationPermission();\n          });\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    _this.addRoom = function (event) {\n      event.preventDefault();\n      var _this$state3 = _this.state,\n          username = _this$state3.username,\n          newRoomName = _this$state3.newRoomName;\n\n      _this.setState({\n        joinableRooms: []\n      });\n\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\n        userId: username,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: 'http://localhost:5200/authenticate'\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.createRoom({\n          name: newRoomName,\n          private: false\n        }).then(function (room) {\n          console.log(\"Created room called \".concat(room.name));\n          console.log(room);\n          axios.post('http://localhost:5200/rooms', {\n            newRoomName: newRoomName\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }).catch(function (err) {\n          console.log(\"Error creating room \".concat(err));\n        });\n\n        _this.setState({\n          joinableRooms: currentUser.rooms\n        });\n      });\n    };\n\n    _this.clickRoom = function (roomid) {\n      event.preventDefault();\n\n      _this.setState({\n        messages: []\n      });\n\n      var username = _this.state.username;\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\n        userId: username,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: 'http://localhost:5200/authenticate'\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.subscribeToRoom({\n          roomId: roomid,\n          hooks: {\n            onMessage: function onMessage(message) {\n              _this.setState({\n                messages: [].concat(_toConsumableArray(_this.state.messages), [message])\n              }, function () {\n                return _this.showNotification(message);\n              });\n\n              console.log(_this.state.messages);\n            },\n            onPresenceChanged: function onPresenceChanged(state, user) {\n              var users = currentUser.users.sort(function (a, b) {\n                if (a.presence.state === 'online') return -1;\n                return 1;\n              });\n\n              _this.setState({\n                users: users\n              });\n            }\n          }\n        }).then(function (room) {\n          _this.setState({\n            roomId: room.id,\n            currentRoomName: room.name\n          });\n\n          var roomName = room.name;\n          var currUser = currentUser.name;\n          console.log(\"currentUser\", currentUser);\n          axios.post('http://localhost:5200/roomUsers', {\n            roomName: roomName,\n            currUser: currUser\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n\n        _this.setState({\n          currentUser: currentUser,\n          users: currentUser.users,\n          joinableRooms: currentUser.rooms\n        }, function () {\n          return _this.grantNotificationPermission();\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchEvents();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          username = _this$state4.username,\n          users = _this$state4.users,\n          currentUser = _this$state4.currentUser,\n          userInput = _this$state4.userInput,\n          messages = _this$state4.messages,\n          joinableRooms = _this$state4.joinableRooms,\n          currentRoom = _this$state4.currentRoom,\n          currentRoomName = _this$state4.currentRoomName,\n          newRoomName = _this$state4.newRoomName,\n          invitedPerson = _this$state4.invitedPerson,\n          events = _this$state4.events;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        users: users,\n        username: username,\n        userInput: userInput,\n        messages: messages,\n        currentUser: currentUser,\n        updateInput: this.updateInput,\n        addUser: this.addUser,\n        sendMessage: this.sendMessage,\n        joinableRooms: joinableRooms,\n        currentRoom: currentRoom,\n        clickRoom: this.clickRoom,\n        currentRoomName: currentRoomName,\n        addRoom: this.addRoom,\n        newRoomName: newRoomName,\n        invitedPerson: invitedPerson,\n        addUserToRoom: this.addUserToRoom,\n        events: events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/events\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Events\"))), React.createElement(Route, {\n        path: \"/events\",\n        component: EventList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tamara/Desktop/react-chatkit-notifications/client/src/App.tsx"],"names":["Chatkit","React","axios","Chat","EventList","BrowserRouter","Router","Link","Route","App","state","username","userInput","messages","currentUser","users","currentRoom","joinableRooms","roomId","currentRoomName","newRoomName","invitedPerson","events","fetchEvents","setState","get","then","response","console","log","data","updateInput","event","target","name","value","grantNotificationPermission","window","alert","Notification","permission","requestPermission","result","sendMessage","preventDefault","messageObj","text","showNotification","message","senderId","title","body","addUserToRoom","chatManager","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","room","catch","err","addUser","post","rooms","error","addRoom","createRoom","private","clickRoom","roomid","subscribeToRoom","hooks","onMessage","onPresenceChanged","user","sort","a","b","presence","id","roomName","currUser","Component"],"mappings":"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","sourcesContent":["import Chatkit from '@pusher/chatkit-client';\r\n\r\nimport * as React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\nimport './normalize.css';\r\nimport './skeleton.css';\r\n\r\nimport Chat from './components/Chat';\r\nimport EventList from './components/Chat';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { join } from 'path';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    username: '',\r\n    userInput: '',\r\n    messages: [],\r\n    currentUser: null,\r\n    users: [],\r\n    currentRoom: [],\r\n    joinableRooms: [],\r\n    roomId: '',\r\n    currentRoomName: '',\r\n    newRoomName: '',\r\n    invitedPerson: '',\r\n    events: []\r\n  };\r\n\r\n  fetchEvents = () => {\r\n    this.setState({...this.state})\r\n    axios.get('http://localhost:5200/api/eventlog').then(response => {\r\n      console.log('Data fetched', response)\r\n      this.setState({\r\n        events: response.data\r\n      })\r\n      console.log(this.state.events)\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n   this.fetchEvents();\r\n  }\r\n  updateInput = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  grantNotificationPermission = () => {\r\n    if (!('Notification' in window)) {\r\n      alert('This browser does not support system notifications');\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission === 'granted') {\r\n      new Notification('You are already subscribed to web notifications');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      Notification.permission !== 'denied'\r\n    ) {\r\n      Notification.requestPermission().then(result => {\r\n        if (result === 'granted') {\r\n          new Notification(\r\n            'Awesome! You will start receiving notifications shortly'\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { userInput, currentUser, roomId } = this.state;\r\n    \r\n    const messageObj = {\r\n      text: userInput,\r\n      roomId: roomId,\r\n    };\r\n\r\n    currentUser.sendMessage(messageObj);\r\n\r\n    this.setState({\r\n      userInput: '',\r\n    });\r\n  };\r\n\r\n\r\n  \r\n\r\n  showNotification = message => {\r\n    const { username } = this.state;\r\n    if (message.senderId !== username) {\r\n      const title = message.text;\r\n      const body = message.senderId;\r\n\r\n      new Notification(title, { body });\r\n    }\r\n  };\r\n\r\n  addUserToRoom = event => {\r\n    event.preventDefault();\r\n    const { username, newRoomName, roomId, invitedPerson } = this.state;\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\r\n      userId: username,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:5200/authenticate',\r\n      }),\r\n    });\r\n\r\n    chatManager.connect().then(currentUser => {\r\n      currentUser.addUserToRoom({\r\n        userId: invitedPerson,\r\n        roomId: roomId,\r\n      }).then(room => {\r\n        console.log(`Created room called ${room.name}`)\r\n      })\r\n      .catch(err => {\r\n        console.log(`Error creating room ${err}`)\r\n      })\r\n    })\r\n  }\r\n\r\n  \r\n  addUser = event => {\r\n    event.preventDefault();\r\n    const { username } = this.state;\r\n    \r\n    axios\r\n      .post('http://localhost:5200/users', { username })\r\n      .then(() => {\r\n        const tokenProvider = new Chatkit.TokenProvider({\r\n          url: 'http://localhost:5200/authenticate',\r\n        });\r\n\r\n        const chatManager = new Chatkit.ChatManager({\r\n          instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\r\n          userId: username,\r\n          tokenProvider,\r\n        });\r\n        \r\n        return chatManager.connect().then(currentUser => {\r\n          this.setState(\r\n            {\r\n              currentUser,\r\n              users: currentUser.users,\r\n              joinableRooms: currentUser.rooms,\r\n              \r\n            },\r\n            () => this.grantNotificationPermission()\r\n          );\r\n        });\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  addRoom = event => {  \r\n    event.preventDefault();\r\n    const { username, newRoomName } = this.state;\r\n    this.setState({ joinableRooms: []})\r\n    \r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\r\n      userId: username,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:5200/authenticate',\r\n      }),\r\n    });\r\n\r\n    chatManager.connect().then(currentUser => {\r\n      currentUser.createRoom({\r\n        name: newRoomName,\r\n        private: false,\r\n      })\r\n      .then(room => {\r\n        console.log(`Created room called ${room.name}`)\r\n        console.log(room)\r\n        axios.post('http://localhost:5200/rooms', {newRoomName})\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(`Error creating room ${err}`)\r\n      })\r\n      this.setState({\r\n        joinableRooms: currentUser.rooms\r\n      })\r\n      \r\n    })\r\n  }\r\n\r\n  clickRoom = roomid => {\r\n    event.preventDefault();\r\n    this.setState({ messages: []})\r\n    const { username } = this.state;\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:fd5d3507-3a44-4f59-905a-010e1d50ac01',\r\n      userId: username,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:5200/authenticate',\r\n      }),\r\n    });\r\n\r\n    \r\n\r\n    chatManager.connect().then(currentUser => {\r\n      currentUser.subscribeToRoom({\r\n        roomId: roomid,\r\n        hooks: {\r\n          onMessage: message => {\r\n            this.setState({messages: [...this.state.messages, message]}, \r\n              () => this.showNotification(message))\r\n            console.log(this.state.messages);\r\n          },\r\n          onPresenceChanged: (state, user) => {\r\n                const users = currentUser.users.sort((a, b) => {\r\n                  if (a.presence.state === 'online') return -1;\r\n                  return 1;\r\n                });\r\n                this.setState({\r\n                  users,\r\n                });\r\n          },\r\n        },\r\n      })\r\n      .then(room =>{\r\n        this.setState({\r\n          roomId: room.id,\r\n          currentRoomName: room.name\r\n        });\r\n        let roomName = room.name\r\n        let currUser = currentUser.name\r\n        console.log(\"currentUser\", currentUser)\r\n        axios.post('http://localhost:5200/roomUsers', {roomName, currUser})\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      })\r\n      this.setState({\r\n        currentUser,\r\n        users: currentUser.users,\r\n        joinableRooms: currentUser.rooms,\r\n      }, () => this.grantNotificationPermission());\r\n\r\n    })\r\n    .catch(error => console.error(error));\r\n  };\r\n\r\n\r\n  render() {\r\n    const { username, users, currentUser, userInput, messages, joinableRooms, currentRoom, currentRoomName, newRoomName, invitedPerson, events} = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Chat\r\n          users={users}\r\n          username={username}\r\n          userInput={userInput}\r\n          messages={messages}\r\n          currentUser={currentUser}\r\n          updateInput={this.updateInput}\r\n          addUser={this.addUser}\r\n          sendMessage={this.sendMessage}\r\n          joinableRooms={joinableRooms}\r\n          currentRoom={currentRoom}\r\n          clickRoom={this.clickRoom}\r\n          currentRoomName={currentRoomName}\r\n          addRoom={this.addRoom}\r\n          newRoomName={newRoomName}\r\n          invitedPerson={invitedPerson}\r\n          addUserToRoom={this.addUserToRoom}\r\n          events={events}\r\n        />\r\n        \r\n        <Router>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/events\">Events</Link>\r\n              </li>\r\n            </ul>\r\n            <Route path=\"/events\" component={EventList} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}